{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vscode\\\\Project\\\\VisualAnalytics\\\\EduAssistSys\\\\frontend\\\\src\\\\pages\\\\DifficultyAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, Button, Table, Spin, Alert, Typography, Divider, Tag } from 'antd';\nimport ReactECharts from 'echarts-for-react';\nimport axios from 'axios';\nimport { DifficultyScatterPlot } from '../components/D3Visualizations';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Paragraph\n} = Typography;\nconst DifficultyAnalysis = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [difficultyData, setDifficultyData] = useState(null);\n  const [unreasonableQuestions, setUnreasonableQuestions] = useState([]);\n\n  // 分析题目难度\n  const analyzeDifficulty = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axios.get('/api/analysis/difficulty');\n      if (response.data.status === 'success') {\n        setDifficultyData(response.data.question_difficulty);\n        setUnreasonableQuestions(response.data.unreasonable_questions || []);\n      } else {\n        setError(response.data.message || '分析失败');\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('题目难度分析失败:', err);\n      setError('题目难度分析失败，请稍后重试');\n      setLoading(false);\n    }\n  };\n\n  // 加载初始数据\n  useEffect(() => {\n    analyzeDifficulty();\n  }, []);\n\n  // 生成题目难度散点图配置\n  const getDifficultyScatterOption = () => {\n    if (!difficultyData) return {};\n    const data = Object.values(difficultyData).map(item => [item.correct_rate * 100,\n    // 正确率\n    item.avg_time_consume,\n    // 平均用时\n    item.title_id,\n    // 题目ID\n    item.knowledge // 知识点\n    ]);\n    return {\n      title: {\n        text: '题目难度分布',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: function (params) {\n          return `题目ID: ${params.value[2]}<br/>` + `知识点: ${params.value[3]}<br/>` + `正确率: ${params.value[0].toFixed(2)}%<br/>` + `平均用时: ${params.value[1].toFixed(2)}秒`;\n        }\n      },\n      xAxis: {\n        type: 'value',\n        name: '正确率(%)',\n        min: 0,\n        max: 100\n      },\n      yAxis: {\n        type: 'value',\n        name: '平均用时(秒)'\n      },\n      series: [{\n        name: '题目难度',\n        type: 'scatter',\n        symbolSize: 10,\n        data: data,\n        itemStyle: {\n          color: function (params) {\n            // 根据正确率设置颜色\n            const correctRate = params.value[0];\n            if (correctRate < 30) return '#ff4d4f'; // 红色：难题\n            if (correctRate < 60) return '#faad14'; // 黄色：中等难度\n            return '#52c41a'; // 绿色：简单题\n          }\n        }\n      }]\n    };\n  };\n\n  // 生成知识点难度柱状图配置\n  const getKnowledgeDifficultyOption = () => {\n    if (!difficultyData) return {};\n\n    // 按知识点分组计算平均正确率和平均用时\n    const knowledgeGroups = {};\n    Object.values(difficultyData).forEach(item => {\n      if (!knowledgeGroups[item.knowledge]) {\n        knowledgeGroups[item.knowledge] = {\n          correctRates: [],\n          timeConsumes: [],\n          count: 0\n        };\n      }\n      knowledgeGroups[item.knowledge].correctRates.push(item.correct_rate);\n      knowledgeGroups[item.knowledge].timeConsumes.push(item.avg_time_consume);\n      knowledgeGroups[item.knowledge].count += 1;\n    });\n\n    // 计算每个知识点的平均值\n    const knowledgeData = Object.entries(knowledgeGroups).map(([knowledge, data]) => {\n      const avgCorrectRate = data.correctRates.reduce((sum, rate) => sum + rate, 0) / data.count;\n      const avgTimeConsume = data.timeConsumes.reduce((sum, time) => sum + time, 0) / data.count;\n      return {\n        knowledge,\n        avgCorrectRate: avgCorrectRate * 100,\n        // 转为百分比\n        avgTimeConsume\n      };\n    });\n\n    // 排序\n    knowledgeData.sort((a, b) => a.avgCorrectRate - b.avgCorrectRate);\n    return {\n      title: {\n        text: '知识点难度分布',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        }\n      },\n      legend: {\n        data: ['平均正确率(%)', '平均用时(秒)'],\n        top: 'bottom'\n      },\n      xAxis: {\n        type: 'category',\n        data: knowledgeData.map(item => item.knowledge),\n        axisLabel: {\n          rotate: 45,\n          interval: 0\n        }\n      },\n      yAxis: [{\n        type: 'value',\n        name: '平均正确率(%)',\n        min: 0,\n        max: 100\n      }, {\n        type: 'value',\n        name: '平均用时(秒)',\n        min: 0\n      }],\n      series: [{\n        name: '平均正确率(%)',\n        type: 'bar',\n        data: knowledgeData.map(item => item.avgCorrectRate.toFixed(2)),\n        itemStyle: {\n          color: '#1890ff'\n        }\n      }, {\n        name: '平均用时(秒)',\n        type: 'line',\n        yAxisIndex: 1,\n        data: knowledgeData.map(item => item.avgTimeConsume.toFixed(2)),\n        itemStyle: {\n          color: '#ff4d4f'\n        }\n      }]\n    };\n  };\n\n  // 不合理题目表格列定义\n  const unreasonableColumns = [{\n    title: '题目ID',\n    dataIndex: 'title_id',\n    key: 'title_id',\n    ellipsis: true\n  }, {\n    title: '知识点',\n    dataIndex: 'knowledge',\n    key: 'knowledge'\n  }, {\n    title: '从属知识点',\n    dataIndex: 'sub_knowledge',\n    key: 'sub_knowledge'\n  }, {\n    title: '题目正确率',\n    dataIndex: 'correct_rate',\n    key: 'correct_rate',\n    render: text => `${(text * 100).toFixed(2)}%`,\n    sorter: (a, b) => a.correct_rate - b.correct_rate\n  }, {\n    title: '学生知识掌握度',\n    dataIndex: 'avg_mastery',\n    key: 'avg_mastery',\n    render: text => `${(text * 100).toFixed(2)}%`,\n    sorter: (a, b) => a.avg_mastery - b.avg_mastery\n  }, {\n    title: '分数',\n    dataIndex: 'score',\n    key: 'score'\n  }, {\n    title: '原因',\n    dataIndex: 'reason',\n    key: 'reason',\n    ellipsis: true\n  }];\n\n  // 题目难度表格列定义\n  const difficultyColumns = [{\n    title: '题目ID',\n    dataIndex: 'title_id',\n    key: 'title_id',\n    ellipsis: true\n  }, {\n    title: '知识点',\n    dataIndex: 'knowledge',\n    key: 'knowledge'\n  }, {\n    title: '从属知识点',\n    dataIndex: 'sub_knowledge',\n    key: 'sub_knowledge'\n  }, {\n    title: '正确率',\n    dataIndex: 'correct_rate',\n    key: 'correct_rate',\n    render: text => `${(text * 100).toFixed(2)}%`,\n    sorter: (a, b) => a.correct_rate - b.correct_rate\n  }, {\n    title: '平均用时(秒)',\n    dataIndex: 'avg_time_consume',\n    key: 'avg_time_consume',\n    render: text => text.toFixed(2),\n    sorter: (a, b) => a.avg_time_consume - b.avg_time_consume\n  }, {\n    title: '分数',\n    dataIndex: 'score',\n    key: 'score'\n  }, {\n    title: '难度等级',\n    key: 'difficulty_level',\n    render: (_, record) => {\n      let color = 'green';\n      let text = '简单';\n      if (record.correct_rate < 0.3) {\n        color = 'red';\n        text = '困难';\n      } else if (record.correct_rate < 0.6) {\n        color = 'orange';\n        text = '中等';\n      }\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 16\n      }, this);\n    }\n  }];\n\n  // 准备题目难度表格数据\n  const getDifficultyTableData = () => {\n    if (!difficultyData) return [];\n    return Object.entries(difficultyData).map(([title_id, data]) => ({\n      key: title_id,\n      ...data\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 2,\n      children: \"\\u9898\\u76EE\\u96BE\\u5EA6\\u5206\\u6790\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      children: \"\\u672C\\u6A21\\u5757\\u5206\\u6790\\u9898\\u76EE\\u96BE\\u5EA6\\u4E0E\\u5B66\\u4E60\\u8005\\u77E5\\u8BC6\\u638C\\u63E1\\u7A0B\\u5EA6\\u7684\\u5339\\u914D\\u60C5\\u51B5\\uFF0C\\u8BC6\\u522B\\u4E0D\\u5408\\u7406\\u7684\\u9898\\u76EE\\u96BE\\u5EA6\\u3002\\u5F53\\u5B66\\u4E60\\u8005\\u77E5\\u8BC6\\u638C\\u63E1\\u6C34\\u5E73\\u5F88\\u9AD8\\u4F46\\u7B54\\u9898\\u6B63\\u786E\\u7387\\u8F83\\u4F4E\\u65F6\\uFF0C\\u610F\\u5473\\u7740\\u9898\\u76EE\\u96BE\\u5EA6\\u8D85\\u51FA\\u4E86\\u5176\\u80FD\\u529B\\u8303\\u56F4\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"filter-form\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 16,\n        align: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: analyzeDifficulty,\n            loading: loading,\n            children: \"\\u5206\\u6790\\u9898\\u76EE\\u96BE\\u5EA6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"\\u9519\\u8BEF\",\n      description: error,\n      type: \"error\",\n      showIcon: true,\n      style: {\n        marginBottom: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      tip: \"\\u5206\\u6790\\u4E2D...\",\n      size: \"large\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this) : difficultyData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"\\u9898\\u76EE\\u96BE\\u5EA6\\u6563\\u70B9\\u56FE\",\n            children: /*#__PURE__*/_jsxDEV(ReactECharts, {\n              option: getDifficultyScatterOption(),\n              style: {\n                height: 400,\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"\\u77E5\\u8BC6\\u70B9\\u96BE\\u5EA6\\u5206\\u5E03\",\n            children: /*#__PURE__*/_jsxDEV(ReactECharts, {\n              option: getKnowledgeDifficultyOption(),\n              style: {\n                height: 400,\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        style: {\n          marginTop: '16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"\\u9898\\u76EE\\u96BE\\u5EA6\\u4E0E\\u6B63\\u786E\\u7387\\u5173\\u7CFB\\u56FE (D3\\u53EF\\u89C6\\u5316)\",\n            children: /*#__PURE__*/_jsxDEV(DifficultyScatterPlot, {\n              data: Object.values(difficultyData)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this), unreasonableQuestions.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"left\",\n          children: \"\\u4E0D\\u5408\\u7406\\u9898\\u76EE\\u5206\\u6790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          message: `发现${unreasonableQuestions.length}道不合理难度的题目`,\n          description: \"\\u4EE5\\u4E0B\\u9898\\u76EE\\u7684\\u96BE\\u5EA6\\u4E0E\\u5B66\\u4E60\\u8005\\u7684\\u77E5\\u8BC6\\u638C\\u63E1\\u7A0B\\u5EA6\\u4E0D\\u5339\\u914D\\uFF0C\\u5EFA\\u8BAE\\u8C03\\u6574\\u9898\\u76EE\\u96BE\\u5EA6\\u6216\\u63D0\\u4F9B\\u66F4\\u591A\\u5B66\\u4E60\\u8D44\\u6E90\\u3002\",\n          type: \"warning\",\n          showIcon: true,\n          style: {\n            marginBottom: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          columns: unreasonableColumns,\n          dataSource: unreasonableQuestions.map((item, index) => ({\n            ...item,\n            key: index\n          })),\n          scroll: {\n            x: 'max-content'\n          },\n          pagination: {\n            pageSize: 5\n          },\n          className: \"data-table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"\\u6240\\u6709\\u9898\\u76EE\\u96BE\\u5EA6\\u5206\\u6790\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: difficultyColumns,\n        dataSource: getDifficultyTableData(),\n        scroll: {\n          x: 'max-content'\n        },\n        pagination: {\n          pageSize: 10\n        },\n        className: \"data-table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n_s(DifficultyAnalysis, \"asD3zuhOyPGRb7o+tosxPTa1Mp4=\");\n_c = DifficultyAnalysis;\nexport default DifficultyAnalysis;\nvar _c;\n$RefreshReg$(_c, \"DifficultyAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Card","Button","Table","Spin","Alert","Typography","Divider","Tag","ReactECharts","axios","DifficultyScatterPlot","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","Paragraph","DifficultyAnalysis","_s","loading","setLoading","error","setError","difficultyData","setDifficultyData","unreasonableQuestions","setUnreasonableQuestions","analyzeDifficulty","response","get","data","status","question_difficulty","unreasonable_questions","message","err","console","getDifficultyScatterOption","Object","values","map","item","correct_rate","avg_time_consume","title_id","knowledge","title","text","left","tooltip","trigger","formatter","params","value","toFixed","xAxis","type","name","min","max","yAxis","series","symbolSize","itemStyle","color","correctRate","getKnowledgeDifficultyOption","knowledgeGroups","forEach","correctRates","timeConsumes","count","push","knowledgeData","entries","avgCorrectRate","reduce","sum","rate","avgTimeConsume","time","sort","a","b","axisPointer","legend","top","axisLabel","rotate","interval","yAxisIndex","unreasonableColumns","dataIndex","key","ellipsis","render","sorter","avg_mastery","difficultyColumns","_","record","children","fileName","_jsxFileName","lineNumber","columnNumber","getDifficultyTableData","level","className","gutter","align","span","onClick","description","showIcon","style","marginBottom","tip","size","display","justifyContent","marginTop","option","height","width","length","orientation","columns","dataSource","index","scroll","x","pagination","pageSize","_c","$RefreshReg$"],"sources":["D:/Vscode/Project/VisualAnalytics/EduAssistSys/frontend/src/pages/DifficultyAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, Button, Table, Spin, Alert, Typography, Divider, Tag } from 'antd';\r\nimport ReactECharts from 'echarts-for-react';\r\nimport axios from 'axios';\r\nimport { DifficultyScatterPlot } from '../components/D3Visualizations';\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst DifficultyAnalysis = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [difficultyData, setDifficultyData] = useState(null);\r\n  const [unreasonableQuestions, setUnreasonableQuestions] = useState([]);\r\n  \r\n  // 分析题目难度\r\n  const analyzeDifficulty = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.get('/api/analysis/difficulty');\r\n      \r\n      if (response.data.status === 'success') {\r\n        setDifficultyData(response.data.question_difficulty);\r\n        setUnreasonableQuestions(response.data.unreasonable_questions || []);\r\n      } else {\r\n        setError(response.data.message || '分析失败');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error('题目难度分析失败:', err);\r\n      setError('题目难度分析失败，请稍后重试');\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // 加载初始数据\r\n  useEffect(() => {\r\n    analyzeDifficulty();\r\n  }, []);\r\n  \r\n  // 生成题目难度散点图配置\r\n  const getDifficultyScatterOption = () => {\r\n    if (!difficultyData) return {};\r\n    \r\n    const data = Object.values(difficultyData).map(item => ([\r\n      item.correct_rate * 100, // 正确率\r\n      item.avg_time_consume,   // 平均用时\r\n      item.title_id,           // 题目ID\r\n      item.knowledge           // 知识点\r\n    ]));\r\n    \r\n    return {\r\n      title: {\r\n        text: '题目难度分布',\r\n        left: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: function(params) {\r\n          return `题目ID: ${params.value[2]}<br/>` +\r\n                 `知识点: ${params.value[3]}<br/>` +\r\n                 `正确率: ${params.value[0].toFixed(2)}%<br/>` +\r\n                 `平均用时: ${params.value[1].toFixed(2)}秒`;\r\n        }\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        name: '正确率(%)',\r\n        min: 0,\r\n        max: 100\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        name: '平均用时(秒)'\r\n      },\r\n      series: [\r\n        {\r\n          name: '题目难度',\r\n          type: 'scatter',\r\n          symbolSize: 10,\r\n          data: data,\r\n          itemStyle: {\r\n            color: function(params) {\r\n              // 根据正确率设置颜色\r\n              const correctRate = params.value[0];\r\n              if (correctRate < 30) return '#ff4d4f'; // 红色：难题\r\n              if (correctRate < 60) return '#faad14'; // 黄色：中等难度\r\n              return '#52c41a'; // 绿色：简单题\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  };\r\n  \r\n  // 生成知识点难度柱状图配置\r\n  const getKnowledgeDifficultyOption = () => {\r\n    if (!difficultyData) return {};\r\n    \r\n    // 按知识点分组计算平均正确率和平均用时\r\n    const knowledgeGroups = {};\r\n    Object.values(difficultyData).forEach(item => {\r\n      if (!knowledgeGroups[item.knowledge]) {\r\n        knowledgeGroups[item.knowledge] = {\r\n          correctRates: [],\r\n          timeConsumes: [],\r\n          count: 0\r\n        };\r\n      }\r\n      \r\n      knowledgeGroups[item.knowledge].correctRates.push(item.correct_rate);\r\n      knowledgeGroups[item.knowledge].timeConsumes.push(item.avg_time_consume);\r\n      knowledgeGroups[item.knowledge].count += 1;\r\n    });\r\n    \r\n    // 计算每个知识点的平均值\r\n    const knowledgeData = Object.entries(knowledgeGroups).map(([knowledge, data]) => {\r\n      const avgCorrectRate = data.correctRates.reduce((sum, rate) => sum + rate, 0) / data.count;\r\n      const avgTimeConsume = data.timeConsumes.reduce((sum, time) => sum + time, 0) / data.count;\r\n      \r\n      return {\r\n        knowledge,\r\n        avgCorrectRate: avgCorrectRate * 100, // 转为百分比\r\n        avgTimeConsume\r\n      };\r\n    });\r\n    \r\n    // 排序\r\n    knowledgeData.sort((a, b) => a.avgCorrectRate - b.avgCorrectRate);\r\n    \r\n    return {\r\n      title: {\r\n        text: '知识点难度分布',\r\n        left: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'shadow'\r\n        }\r\n      },\r\n      legend: {\r\n        data: ['平均正确率(%)', '平均用时(秒)'],\r\n        top: 'bottom'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: knowledgeData.map(item => item.knowledge),\r\n        axisLabel: {\r\n          rotate: 45,\r\n          interval: 0\r\n        }\r\n      },\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: '平均正确率(%)',\r\n          min: 0,\r\n          max: 100\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: '平均用时(秒)',\r\n          min: 0\r\n        }\r\n      ],\r\n      series: [\r\n        {\r\n          name: '平均正确率(%)',\r\n          type: 'bar',\r\n          data: knowledgeData.map(item => item.avgCorrectRate.toFixed(2)),\r\n          itemStyle: {\r\n            color: '#1890ff'\r\n          }\r\n        },\r\n        {\r\n          name: '平均用时(秒)',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: knowledgeData.map(item => item.avgTimeConsume.toFixed(2)),\r\n          itemStyle: {\r\n            color: '#ff4d4f'\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  };\r\n  \r\n  // 不合理题目表格列定义\r\n  const unreasonableColumns = [\r\n    {\r\n      title: '题目ID',\r\n      dataIndex: 'title_id',\r\n      key: 'title_id',\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: '知识点',\r\n      dataIndex: 'knowledge',\r\n      key: 'knowledge',\r\n    },\r\n    {\r\n      title: '从属知识点',\r\n      dataIndex: 'sub_knowledge',\r\n      key: 'sub_knowledge',\r\n    },\r\n    {\r\n      title: '题目正确率',\r\n      dataIndex: 'correct_rate',\r\n      key: 'correct_rate',\r\n      render: (text) => `${(text * 100).toFixed(2)}%`,\r\n      sorter: (a, b) => a.correct_rate - b.correct_rate,\r\n    },\r\n    {\r\n      title: '学生知识掌握度',\r\n      dataIndex: 'avg_mastery',\r\n      key: 'avg_mastery',\r\n      render: (text) => `${(text * 100).toFixed(2)}%`,\r\n      sorter: (a, b) => a.avg_mastery - b.avg_mastery,\r\n    },\r\n    {\r\n      title: '分数',\r\n      dataIndex: 'score',\r\n      key: 'score',\r\n    },\r\n    {\r\n      title: '原因',\r\n      dataIndex: 'reason',\r\n      key: 'reason',\r\n      ellipsis: true,\r\n    },\r\n  ];\r\n  \r\n  // 题目难度表格列定义\r\n  const difficultyColumns = [\r\n    {\r\n      title: '题目ID',\r\n      dataIndex: 'title_id',\r\n      key: 'title_id',\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: '知识点',\r\n      dataIndex: 'knowledge',\r\n      key: 'knowledge',\r\n    },\r\n    {\r\n      title: '从属知识点',\r\n      dataIndex: 'sub_knowledge',\r\n      key: 'sub_knowledge',\r\n    },\r\n    {\r\n      title: '正确率',\r\n      dataIndex: 'correct_rate',\r\n      key: 'correct_rate',\r\n      render: (text) => `${(text * 100).toFixed(2)}%`,\r\n      sorter: (a, b) => a.correct_rate - b.correct_rate,\r\n    },\r\n    {\r\n      title: '平均用时(秒)',\r\n      dataIndex: 'avg_time_consume',\r\n      key: 'avg_time_consume',\r\n      render: (text) => text.toFixed(2),\r\n      sorter: (a, b) => a.avg_time_consume - b.avg_time_consume,\r\n    },\r\n    {\r\n      title: '分数',\r\n      dataIndex: 'score',\r\n      key: 'score',\r\n    },\r\n    {\r\n      title: '难度等级',\r\n      key: 'difficulty_level',\r\n      render: (_, record) => {\r\n        let color = 'green';\r\n        let text = '简单';\r\n        \r\n        if (record.correct_rate < 0.3) {\r\n          color = 'red';\r\n          text = '困难';\r\n        } else if (record.correct_rate < 0.6) {\r\n          color = 'orange';\r\n          text = '中等';\r\n        }\r\n        \r\n        return <Tag color={color}>{text}</Tag>;\r\n      },\r\n    },\r\n  ];\r\n  \r\n  // 准备题目难度表格数据\r\n  const getDifficultyTableData = () => {\r\n    if (!difficultyData) return [];\r\n    \r\n    return Object.entries(difficultyData).map(([title_id, data]) => ({\r\n      key: title_id,\r\n      ...data\r\n    }));\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Title level={2}>题目难度分析</Title>\r\n      <Paragraph>\r\n        本模块分析题目难度与学习者知识掌握程度的匹配情况，识别不合理的题目难度。当学习者知识掌握水平很高但答题正确率较低时，意味着题目难度超出了其能力范围。\r\n      </Paragraph>\r\n      \r\n      <Card className=\"filter-form\">\r\n        <Row gutter={16} align=\"middle\">\r\n          <Col span={24}>\r\n            <Button type=\"primary\" onClick={analyzeDifficulty} loading={loading}>\r\n              分析题目难度\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n      \r\n      {error && <Alert message=\"错误\" description={error} type=\"error\" showIcon style={{ marginBottom: 16 }} />}\r\n      \r\n      {loading ? (\r\n        <Spin tip=\"分析中...\" size=\"large\" style={{ display: 'flex', justifyContent: 'center', marginTop: '100px' }} />\r\n      ) : difficultyData ? (\r\n        <>\r\n          <Row gutter={[16, 16]}>\r\n            <Col span={12}>\r\n              <Card title=\"题目难度散点图\">\r\n                <ReactECharts option={getDifficultyScatterOption()} style={{ height: 400, width: '100%' }} />\r\n              </Card>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Card title=\"知识点难度分布\">\r\n                <ReactECharts option={getKnowledgeDifficultyOption()} style={{ height: 400, width: '100%' }} />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          \r\n          {/* D3.js题目难度散点图 */}\r\n          <Row gutter={[16, 16]} style={{ marginTop: '16px' }}>\r\n            <Col span={24}>\r\n              <Card title=\"题目难度与正确率关系图 (D3可视化)\">\r\n                <DifficultyScatterPlot \r\n                  data={Object.values(difficultyData)} \r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          \r\n          {unreasonableQuestions.length > 0 && (\r\n            <>\r\n              <Divider orientation=\"left\">不合理题目分析</Divider>\r\n              <Alert\r\n                message={`发现${unreasonableQuestions.length}道不合理难度的题目`}\r\n                description=\"以下题目的难度与学习者的知识掌握程度不匹配，建议调整题目难度或提供更多学习资源。\"\r\n                type=\"warning\"\r\n                showIcon\r\n                style={{ marginBottom: 16 }}\r\n              />\r\n              <Table \r\n                columns={unreasonableColumns} \r\n                dataSource={unreasonableQuestions.map((item, index) => ({ ...item, key: index }))} \r\n                scroll={{ x: 'max-content' }}\r\n                pagination={{ pageSize: 5 }}\r\n                className=\"data-table\"\r\n              />\r\n            </>\r\n          )}\r\n          \r\n          <Divider orientation=\"left\">所有题目难度分析</Divider>\r\n          <Table \r\n            columns={difficultyColumns} \r\n            dataSource={getDifficultyTableData()} \r\n            scroll={{ x: 'max-content' }}\r\n            pagination={{ pageSize: 10 }}\r\n            className=\"data-table\"\r\n          />\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DifficultyAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}