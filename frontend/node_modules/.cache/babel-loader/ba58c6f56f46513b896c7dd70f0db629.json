{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vscode\\\\Project\\\\VisualAnalytics\\\\EduAssistSys\\\\frontend\\\\src\\\\components\\\\D3Visualizations\\\\SubmissionTimeline.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { Card, Typography } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\n/**\r\n * 答题提交时间线可视化组件\r\n * 使用D3.js实现的时间序列图，展示学习者答题行为的时间模式\r\n * @param {Object} props\r\n * @param {Array} props.data 答题数据数组\r\n * @param {string} props.title 图表标题\r\n */\nconst SubmissionTimeline = ({\n  data,\n  title = '答题行为时间线'\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // 清除之前的图表\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // 设置画布尺寸\n    const width = 800;\n    const height = 300;\n    const margin = {\n      top: 30,\n      right: 50,\n      bottom: 50,\n      left: 50\n    };\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    // 解析日期\n    const parseDate = d3.timeParse('%Y-%m-%d %H:%M:%S');\n\n    // 处理数据\n    const processedData = data.map(d => ({\n      ...d,\n      timestamp: parseDate(d.submit_time),\n      correct: d.is_correct ? '正确' : '错误'\n    })).sort((a, b) => a.timestamp - b.timestamp);\n\n    // 创建SVG元素\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // 创建X轴比例尺（时间）\n    const xScale = d3.scaleTime().domain(d3.extent(processedData, d => d.timestamp)).range([0, innerWidth]);\n\n    // 创建Y轴比例尺（知识点分类）\n    const knowledgePoints = [...new Set(processedData.map(d => d.knowledge))];\n    const yScale = d3.scaleBand().domain(knowledgePoints).range([0, innerHeight]).padding(0.2);\n\n    // 创建颜色比例尺（根据是否正确）\n    const colorScale = d3.scaleOrdinal().domain(['正确', '错误']).range(['#52c41a', '#ff4d4f']);\n\n    // 绘制X轴\n    svg.append('g').attr('transform', `translate(0,${innerHeight})`).call(d3.axisBottom(xScale)).selectAll('text').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em').attr('transform', 'rotate(-45)');\n\n    // 添加X轴标签\n    svg.append('text').attr('x', innerWidth / 2).attr('y', innerHeight + margin.bottom - 5).style('text-anchor', 'middle').text('提交时间');\n\n    // 绘制Y轴\n    svg.append('g').call(d3.axisLeft(yScale));\n\n    // 添加Y轴标签\n    svg.append('text').attr('transform', 'rotate(-90)').attr('y', -margin.left + 15).attr('x', -innerHeight / 2).attr('dy', '1em').style('text-anchor', 'middle').text('知识点');\n\n    // 绘制数据点\n    svg.selectAll('.dot').data(processedData).enter().append('circle').attr('class', 'dot').attr('cx', d => xScale(d.timestamp)).attr('cy', d => yScale(d.knowledge) + yScale.bandwidth() / 2).attr('r', 6).style('fill', d => colorScale(d.correct)).style('opacity', 0.7).style('stroke', '#fff').style('stroke-width', 1).on('mouseover', function (event, d) {\n      d3.select(this).transition().duration(200).attr('r', 9).style('opacity', 1);\n\n      // 显示提示框\n      tooltip.transition().duration(200).style('opacity', .9);\n      tooltip.html(`题目ID: ${d.title_id}<br/>知识点: ${d.knowledge}<br/>结果: ${d.correct}<br/>时间: ${d3.timeFormat('%Y-%m-%d %H:%M')(d.timestamp)}`).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n    }).on('mouseout', function () {\n      d3.select(this).transition().duration(500).attr('r', 6).style('opacity', 0.7);\n\n      // 隐藏提示框\n      tooltip.transition().duration(500).style('opacity', 0);\n    });\n\n    // 添加标题\n    svg.append('text').attr('x', innerWidth / 2).attr('y', -margin.top / 2).attr('text-anchor', 'middle').style('font-size', '16px').style('font-weight', 'bold').text(title);\n\n    // 添加图例\n    const legend = svg.append('g').attr('transform', `translate(${innerWidth - 100}, -10)`);\n    const legendData = [{\n      color: '#52c41a',\n      text: '正确'\n    }, {\n      color: '#ff4d4f',\n      text: '错误'\n    }];\n    legendData.forEach((item, i) => {\n      const legendRow = legend.append('g').attr('transform', `translate(0, ${i * 20})`);\n      legendRow.append('rect').attr('width', 15).attr('height', 15).attr('fill', item.color);\n      legendRow.append('text').attr('x', 20).attr('y', 12).text(item.text).style('font-size', '12px');\n    });\n\n    // 创建提示框\n    const tooltip = d3.select('body').append('div').attr('class', 'd3-tooltip').style('opacity', 0).style('position', 'absolute').style('text-align', 'center').style('padding', '8px').style('font-size', '12px').style('background', 'rgba(0, 0, 0, 0.75)').style('color', '#fff').style('border-radius', '4px').style('pointer-events', 'none');\n\n    // 清理函数\n    return () => {\n      d3.select('body').selectAll('.d3-tooltip').remove();\n    };\n  }, [data, title]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      marginTop: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 4,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        overflowX: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmissionTimeline, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = SubmissionTimeline;\nexport default SubmissionTimeline;\nvar _c;\n$RefreshReg$(_c, \"SubmissionTimeline\");","map":{"version":3,"names":["React","useRef","useEffect","d3","Card","Typography","jsxDEV","_jsxDEV","Title","SubmissionTimeline","data","title","_s","svgRef","length","select","current","selectAll","remove","width","height","margin","top","right","bottom","left","innerWidth","innerHeight","parseDate","timeParse","processedData","map","d","timestamp","submit_time","correct","is_correct","sort","a","b","svg","attr","append","xScale","scaleTime","domain","extent","range","knowledgePoints","Set","knowledge","yScale","scaleBand","padding","colorScale","scaleOrdinal","call","axisBottom","style","text","axisLeft","enter","bandwidth","on","event","transition","duration","tooltip","html","title_id","timeFormat","pageX","pageY","legend","legendData","color","forEach","item","i","legendRow","marginTop","children","level","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","overflowX","ref","_c","$RefreshReg$"],"sources":["D:/Vscode/Project/VisualAnalytics/EduAssistSys/frontend/src/components/D3Visualizations/SubmissionTimeline.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { Card, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\n/**\r\n * 答题提交时间线可视化组件\r\n * 使用D3.js实现的时间序列图，展示学习者答题行为的时间模式\r\n * @param {Object} props\r\n * @param {Array} props.data 答题数据数组\r\n * @param {string} props.title 图表标题\r\n */\r\nconst SubmissionTimeline = ({ data, title = '答题行为时间线' }) => {\r\n  const svgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!data || data.length === 0) return;\r\n\r\n    // 清除之前的图表\r\n    d3.select(svgRef.current).selectAll('*').remove();\r\n\r\n    // 设置画布尺寸\r\n    const width = 800;\r\n    const height = 300;\r\n    const margin = { top: 30, right: 50, bottom: 50, left: 50 };\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    // 解析日期\r\n    const parseDate = d3.timeParse('%Y-%m-%d %H:%M:%S');\r\n    \r\n    // 处理数据\r\n    const processedData = data.map(d => ({\r\n      ...d,\r\n      timestamp: parseDate(d.submit_time),\r\n      correct: d.is_correct ? '正确' : '错误'\r\n    })).sort((a, b) => a.timestamp - b.timestamp);\r\n\r\n    // 创建SVG元素\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    // 创建X轴比例尺（时间）\r\n    const xScale = d3.scaleTime()\r\n      .domain(d3.extent(processedData, d => d.timestamp))\r\n      .range([0, innerWidth]);\r\n\r\n    // 创建Y轴比例尺（知识点分类）\r\n    const knowledgePoints = [...new Set(processedData.map(d => d.knowledge))];\r\n    const yScale = d3.scaleBand()\r\n      .domain(knowledgePoints)\r\n      .range([0, innerHeight])\r\n      .padding(0.2);\r\n\r\n    // 创建颜色比例尺（根据是否正确）\r\n    const colorScale = d3.scaleOrdinal()\r\n      .domain(['正确', '错误'])\r\n      .range(['#52c41a', '#ff4d4f']);\r\n\r\n    // 绘制X轴\r\n    svg.append('g')\r\n      .attr('transform', `translate(0,${innerHeight})`)\r\n      .call(d3.axisBottom(xScale))\r\n      .selectAll('text')\r\n      .style('text-anchor', 'end')\r\n      .attr('dx', '-.8em')\r\n      .attr('dy', '.15em')\r\n      .attr('transform', 'rotate(-45)');\r\n\r\n    // 添加X轴标签\r\n    svg.append('text')\r\n      .attr('x', innerWidth / 2)\r\n      .attr('y', innerHeight + margin.bottom - 5)\r\n      .style('text-anchor', 'middle')\r\n      .text('提交时间');\r\n\r\n    // 绘制Y轴\r\n    svg.append('g')\r\n      .call(d3.axisLeft(yScale));\r\n\r\n    // 添加Y轴标签\r\n    svg.append('text')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', -margin.left + 15)\r\n      .attr('x', -innerHeight / 2)\r\n      .attr('dy', '1em')\r\n      .style('text-anchor', 'middle')\r\n      .text('知识点');\r\n\r\n    // 绘制数据点\r\n    svg.selectAll('.dot')\r\n      .data(processedData)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'dot')\r\n      .attr('cx', d => xScale(d.timestamp))\r\n      .attr('cy', d => yScale(d.knowledge) + yScale.bandwidth() / 2)\r\n      .attr('r', 6)\r\n      .style('fill', d => colorScale(d.correct))\r\n      .style('opacity', 0.7)\r\n      .style('stroke', '#fff')\r\n      .style('stroke-width', 1)\r\n      .on('mouseover', function(event, d) {\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(200)\r\n          .attr('r', 9)\r\n          .style('opacity', 1);\r\n\r\n        // 显示提示框\r\n        tooltip.transition()\r\n          .duration(200)\r\n          .style('opacity', .9);\r\n        tooltip.html(`题目ID: ${d.title_id}<br/>知识点: ${d.knowledge}<br/>结果: ${d.correct}<br/>时间: ${d3.timeFormat('%Y-%m-%d %H:%M')(d.timestamp)}`)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', function() {\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(500)\r\n          .attr('r', 6)\r\n          .style('opacity', 0.7);\r\n\r\n        // 隐藏提示框\r\n        tooltip.transition()\r\n          .duration(500)\r\n          .style('opacity', 0);\r\n      });\r\n\r\n    // 添加标题\r\n    svg.append('text')\r\n      .attr('x', innerWidth / 2)\r\n      .attr('y', -margin.top / 2)\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n      .text(title);\r\n\r\n    // 添加图例\r\n    const legend = svg.append('g')\r\n      .attr('transform', `translate(${innerWidth - 100}, -10)`);\r\n\r\n    const legendData = [\r\n      { color: '#52c41a', text: '正确' },\r\n      { color: '#ff4d4f', text: '错误' }\r\n    ];\r\n\r\n    legendData.forEach((item, i) => {\r\n      const legendRow = legend.append('g')\r\n        .attr('transform', `translate(0, ${i * 20})`);\r\n      \r\n      legendRow.append('rect')\r\n        .attr('width', 15)\r\n        .attr('height', 15)\r\n        .attr('fill', item.color);\r\n      \r\n      legendRow.append('text')\r\n        .attr('x', 20)\r\n        .attr('y', 12)\r\n        .text(item.text)\r\n        .style('font-size', '12px');\r\n    });\r\n\r\n    // 创建提示框\r\n    const tooltip = d3.select('body').append('div')\r\n      .attr('class', 'd3-tooltip')\r\n      .style('opacity', 0)\r\n      .style('position', 'absolute')\r\n      .style('text-align', 'center')\r\n      .style('padding', '8px')\r\n      .style('font-size', '12px')\r\n      .style('background', 'rgba(0, 0, 0, 0.75)')\r\n      .style('color', '#fff')\r\n      .style('border-radius', '4px')\r\n      .style('pointer-events', 'none');\r\n\r\n    // 清理函数\r\n    return () => {\r\n      d3.select('body').selectAll('.d3-tooltip').remove();\r\n    };\r\n  }, [data, title]);\r\n\r\n  return (\r\n    <Card style={{ marginTop: 16 }}>\r\n      <Title level={4}>{title}</Title>\r\n      <div style={{ display: 'flex', justifyContent: 'center', overflowX: 'auto' }}>\r\n        <svg ref={svgRef}></svg>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SubmissionTimeline;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}