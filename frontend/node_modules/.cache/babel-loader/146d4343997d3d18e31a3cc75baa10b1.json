{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vscode\\\\Project\\\\VisualAnalytics\\\\EduAssistSys\\\\frontend\\\\src\\\\components\\\\D3Visualizations\\\\KnowledgeForceGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { Card, Typography } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\n/**\r\n * 知识点力导向图组件\r\n * 使用D3.js实现的力导向图，展示知识点之间的关联关系\r\n * @param {Object} props\r\n * @param {Object} props.data 知识点数据\r\n */\nconst KnowledgeForceGraph = ({\n  data,\n  title = '知识点关联力导向图'\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  useEffect(() => {\n    // 添加调试信息\n    console.log('KnowledgeForceGraph组件接收到数据:', data);\n    if (!data || !data.nodes) {\n      console.log('KnowledgeForceGraph组件：数据不完整或为空，无法渲染图表');\n      return;\n    }\n\n    // 确保links数组存在\n    const links = data.links || [];\n    // 创建数据的深拷贝，避免修改原始数据\n    const graphData = {\n      nodes: [...data.nodes],\n      links: [...links]\n    };\n    console.log('KnowledgeForceGraph组件：处理后的数据:', graphData);\n\n    // 清除之前的图表\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // 设置画布尺寸\n    const width = 600;\n    const height = 400;\n    const margin = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20\n    };\n\n    // 创建SVG元素\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // 创建力导向模拟\n    const simulation = d3.forceSimulation(graphData.nodes).force('link', d3.forceLink(graphData.links).id(d => d.id).distance(100)).force('charge', d3.forceManyBody().strength(-200)).force('center', d3.forceCenter(width / 2 - margin.left, height / 2 - margin.top)).force('collision', d3.forceCollide().radius(30));\n\n    // 定义颜色比例尺 - 根据掌握程度设置颜色\n    const colorScale = d3.scaleLinear().domain([0, 0.5, 1]).range(['#ff4d4f', '#faad14', '#52c41a']);\n\n    // 绘制连接线\n    const link = svg.append('g').selectAll('line').data(graphData.links).enter().append('line').attr('stroke', '#999').attr('stroke-opacity', 0.6).attr('stroke-width', d => Math.sqrt(d.value || 1));\n\n    // 创建节点组\n    const node = svg.append('g').selectAll('.node').data(graphData.nodes).enter().append('g').attr('class', 'node').call(d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended));\n\n    // 添加节点圆圈\n    node.append('circle').attr('r', d => {\n      // 确保value存在且为数字，否则使用默认值\n      const value = typeof d.value === 'number' && !isNaN(d.value) ? d.value : 1;\n      return 20 + value * 10;\n    }).attr('fill', d => {\n      // 确保mastery存在且为数字，否则使用默认值0.5\n      const mastery = typeof d.mastery === 'number' && !isNaN(d.mastery) ? d.mastery : 0.5;\n      return colorScale(mastery);\n    }).attr('stroke', '#fff').attr('stroke-width', 1.5);\n\n    // 添加节点文本\n    node.append('text').attr('dy', '.35em').attr('text-anchor', 'middle').text(d => d.name).attr('fill', '#fff').style('font-size', '12px').style('pointer-events', 'none');\n\n    // 添加标题\n    svg.append('text').attr('x', (width - margin.left - margin.right) / 2).attr('y', -5).attr('text-anchor', 'middle').style('font-size', '16px').style('font-weight', 'bold').text(title);\n\n    // 添加图例\n    const legend = svg.append('g').attr('transform', `translate(${width - margin.right - 150}, ${height - margin.bottom - 80})`);\n    const legendData = [{\n      color: '#ff4d4f',\n      text: '掌握度低'\n    }, {\n      color: '#faad14',\n      text: '掌握度中'\n    }, {\n      color: '#52c41a',\n      text: '掌握度高'\n    }];\n    legendData.forEach((item, i) => {\n      const legendRow = legend.append('g').attr('transform', `translate(0, ${i * 20})`);\n      legendRow.append('rect').attr('width', 15).attr('height', 15).attr('fill', item.color);\n      legendRow.append('text').attr('x', 20).attr('y', 12).text(item.text).style('font-size', '12px');\n    });\n\n    // 更新力导向图\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('transform', d => `translate(${d.x},${d.y})`);\n    });\n\n    // 拖拽事件处理函数\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    // 添加交互提示\n    node.append('title').text(d => `${d.name}\\n掌握度: ${(d.mastery * 100).toFixed(1)}%`);\n    return () => {\n      simulation.stop();\n    };\n  }, [data, title]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      marginTop: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 4,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        overflow: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: \"600\",\n        height: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(KnowledgeForceGraph, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = KnowledgeForceGraph;\nexport default KnowledgeForceGraph;\nvar _c;\n$RefreshReg$(_c, \"KnowledgeForceGraph\");","map":{"version":3,"names":["React","useRef","useEffect","d3","Card","Typography","jsxDEV","_jsxDEV","Title","KnowledgeForceGraph","data","title","_s","svgRef","console","log","nodes","links","graphData","select","current","selectAll","remove","width","height","margin","top","right","bottom","left","svg","attr","append","simulation","forceSimulation","force","forceLink","id","d","distance","forceManyBody","strength","forceCenter","forceCollide","radius","colorScale","scaleLinear","domain","range","link","enter","Math","sqrt","value","node","call","drag","on","dragstarted","dragged","dragended","isNaN","mastery","text","name","style","legend","legendData","color","forEach","item","i","legendRow","source","x","y","target","event","active","alphaTarget","restart","fx","fy","toFixed","stop","marginTop","children","level","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","overflow","ref","_c","$RefreshReg$"],"sources":["D:/Vscode/Project/VisualAnalytics/EduAssistSys/frontend/src/components/D3Visualizations/KnowledgeForceGraph.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { Card, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\n/**\r\n * 知识点力导向图组件\r\n * 使用D3.js实现的力导向图，展示知识点之间的关联关系\r\n * @param {Object} props\r\n * @param {Object} props.data 知识点数据\r\n */\r\nconst KnowledgeForceGraph = ({ data, title = '知识点关联力导向图' }) => {\r\n  const svgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // 添加调试信息\r\n    console.log('KnowledgeForceGraph组件接收到数据:', data);\r\n    \r\n    if (!data || !data.nodes) {\r\n      console.log('KnowledgeForceGraph组件：数据不完整或为空，无法渲染图表');\r\n      return;\r\n    }\r\n    \r\n    // 确保links数组存在\r\n    const links = data.links || [];\r\n    // 创建数据的深拷贝，避免修改原始数据\r\n    const graphData = {\r\n      nodes: [...data.nodes],\r\n      links: [...links]\r\n    };\r\n    \r\n    console.log('KnowledgeForceGraph组件：处理后的数据:', graphData);\r\n\r\n    // 清除之前的图表\r\n    d3.select(svgRef.current).selectAll('*').remove();\r\n\r\n    // 设置画布尺寸\r\n    const width = 600;\r\n    const height = 400;\r\n    const margin = { top: 20, right: 20, bottom: 20, left: 20 };\r\n\r\n    // 创建SVG元素\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    // 创建力导向模拟\r\n    const simulation = d3.forceSimulation(graphData.nodes)\r\n      .force('link', d3.forceLink(graphData.links).id(d => d.id).distance(100))\r\n      .force('charge', d3.forceManyBody().strength(-200))\r\n      .force('center', d3.forceCenter(width / 2 - margin.left, height / 2 - margin.top))\r\n      .force('collision', d3.forceCollide().radius(30));\r\n\r\n    // 定义颜色比例尺 - 根据掌握程度设置颜色\r\n    const colorScale = d3.scaleLinear()\r\n      .domain([0, 0.5, 1])\r\n      .range(['#ff4d4f', '#faad14', '#52c41a']);\r\n\r\n    // 绘制连接线\r\n    const link = svg.append('g')\r\n      .selectAll('line')\r\n      .data(graphData.links)\r\n      .enter()\r\n      .append('line')\r\n      .attr('stroke', '#999')\r\n      .attr('stroke-opacity', 0.6)\r\n      .attr('stroke-width', d => Math.sqrt(d.value || 1));\r\n\r\n    // 创建节点组\r\n    const node = svg.append('g')\r\n      .selectAll('.node')\r\n      .data(graphData.nodes)\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'node')\r\n      .call(d3.drag()\r\n        .on('start', dragstarted)\r\n        .on('drag', dragged)\r\n        .on('end', dragended));\r\n\r\n    // 添加节点圆圈\r\n    node.append('circle')\r\n      .attr('r', d => {\r\n        // 确保value存在且为数字，否则使用默认值\r\n        const value = typeof d.value === 'number' && !isNaN(d.value) ? d.value : 1;\r\n        return 20 + value * 10;\r\n      })\r\n      .attr('fill', d => {\r\n        // 确保mastery存在且为数字，否则使用默认值0.5\r\n        const mastery = typeof d.mastery === 'number' && !isNaN(d.mastery) ? d.mastery : 0.5;\r\n        return colorScale(mastery);\r\n      })\r\n      .attr('stroke', '#fff')\r\n      .attr('stroke-width', 1.5);\r\n\r\n    // 添加节点文本\r\n    node.append('text')\r\n      .attr('dy', '.35em')\r\n      .attr('text-anchor', 'middle')\r\n      .text(d => d.name)\r\n      .attr('fill', '#fff')\r\n      .style('font-size', '12px')\r\n      .style('pointer-events', 'none');\r\n\r\n    // 添加标题\r\n    svg.append('text')\r\n      .attr('x', (width - margin.left - margin.right) / 2)\r\n      .attr('y', -5)\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n      .text(title);\r\n\r\n    // 添加图例\r\n    const legend = svg.append('g')\r\n      .attr('transform', `translate(${width - margin.right - 150}, ${height - margin.bottom - 80})`);\r\n\r\n    const legendData = [\r\n      { color: '#ff4d4f', text: '掌握度低' },\r\n      { color: '#faad14', text: '掌握度中' },\r\n      { color: '#52c41a', text: '掌握度高' }\r\n    ];\r\n\r\n    legendData.forEach((item, i) => {\r\n      const legendRow = legend.append('g')\r\n        .attr('transform', `translate(0, ${i * 20})`);\r\n      \r\n      legendRow.append('rect')\r\n        .attr('width', 15)\r\n        .attr('height', 15)\r\n        .attr('fill', item.color);\r\n      \r\n      legendRow.append('text')\r\n        .attr('x', 20)\r\n        .attr('y', 12)\r\n        .text(item.text)\r\n        .style('font-size', '12px');\r\n    });\r\n\r\n    // 更新力导向图\r\n    simulation.on('tick', () => {\r\n      link\r\n        .attr('x1', d => d.source.x)\r\n        .attr('y1', d => d.source.y)\r\n        .attr('x2', d => d.target.x)\r\n        .attr('y2', d => d.target.y);\r\n\r\n      node.attr('transform', d => `translate(${d.x},${d.y})`);\r\n    });\r\n\r\n    // 拖拽事件处理函数\r\n    function dragstarted(event, d) {\r\n      if (!event.active) simulation.alphaTarget(0.3).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    }\r\n\r\n    function dragged(event, d) {\r\n      d.fx = event.x;\r\n      d.fy = event.y;\r\n    }\r\n\r\n    function dragended(event, d) {\r\n      if (!event.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    }\r\n\r\n    // 添加交互提示\r\n    node.append('title')\r\n      .text(d => `${d.name}\\n掌握度: ${(d.mastery * 100).toFixed(1)}%`);\r\n\r\n    return () => {\r\n      simulation.stop();\r\n    };\r\n  }, [data, title]);\r\n\r\n  return (\r\n    <Card style={{ marginTop: 16 }}>\r\n      <Title level={4}>{title}</Title>\r\n      <div style={{ display: 'flex', justifyContent: 'center', overflow: 'auto' }}>\r\n        <svg ref={svgRef} width=\"600\" height=\"400\"></svg>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default KnowledgeForceGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}